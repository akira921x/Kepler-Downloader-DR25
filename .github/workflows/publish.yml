name: Publish to PyPI

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: read
  id-token: write  # Required for PyPI trusted publishing

jobs:
  build-and-publish:
    name: Build and Publish to PyPI
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for proper versioning
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build wheel setuptools twine
    
    - name: Verify version consistency
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        TAG_VERSION=${GITHUB_REF#refs/tags/v}
        PACKAGE_VERSION=$(python -c "exec(open('kepler_downloader_dr25/_version.py').read()); print(__version__)")
        
        if [ "$TAG_VERSION" != "$PACKAGE_VERSION" ]; then
          echo "Error: Tag version ($TAG_VERSION) does not match package version ($PACKAGE_VERSION)"
          exit 1
        fi
        echo "Version check passed: v$PACKAGE_VERSION"
    
    - name: Build distribution
      run: python -m build
    
    - name: Check distribution
      run: twine check dist/*
    
    - name: Upload distribution artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    
    - name: Publish to PyPI
      if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'release'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verbose: true
        print-hash: true
    
    - name: Create GitHub Release Assets
      if: startsWith(github.ref, 'refs/tags/v')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Calculate checksums
        cd dist
        sha256sum * > SHA256SUMS.txt
        cd ..
        
        # Upload to release
        gh release upload ${{ github.ref_name }} dist/* --clobber || echo "No release found"